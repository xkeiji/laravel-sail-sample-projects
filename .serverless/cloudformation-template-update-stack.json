{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "WebLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/laravel-dev-web"
      }
    },
    "ArtisanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/laravel-dev-artisan"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "laravel",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/laravel-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "laravel",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "WebLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/laravel/dev/1616132556080-2021-03-19T05:42:36.080Z/laravel.zip"
        },
        "Handler": "public/index.php",
        "Runtime": "provided.al2",
        "FunctionName": "laravel-dev-web",
        "MemorySize": 1024,
        "Timeout": 28,
        "Environment": {
          "Variables": {
            "DB_PORT": "3306",
            "DB_HOST": {
              "Fn::GetAtt": [
                "DBCluster",
                "Endpoint.Address"
              ]
            },
            "DB_PASSWORD": "password"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "LambdaSecurityGroup"
            }
          ],
          "SubnetIds": [
            {
              "Ref": "PrivateSubnetA"
            },
            {
              "Ref": "PrivateSubnetC"
            }
          ]
        },
        "Layers": [
          "arn:aws:lambda:ap-northeast-1:209497400698:layer:php-74-fpm:18"
        ]
      },
      "DependsOn": [
        "WebLogGroup"
      ]
    },
    "ArtisanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/laravel/dev/1616132556080-2021-03-19T05:42:36.080Z/laravel.zip"
        },
        "Handler": "artisan",
        "Runtime": "provided.al2",
        "FunctionName": "laravel-dev-artisan",
        "MemorySize": 1024,
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "DB_PORT": "3306",
            "DB_HOST": {
              "Fn::GetAtt": [
                "DBCluster",
                "Endpoint.Address"
              ]
            },
            "DB_PASSWORD": "password"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Ref": "LambdaSecurityGroup"
            }
          ],
          "SubnetIds": [
            {
              "Ref": "PrivateSubnetA"
            },
            {
              "Ref": "PrivateSubnetC"
            }
          ]
        },
        "Layers": [
          "arn:aws:lambda:ap-northeast-1:209497400698:layer:php-74:18",
          "arn:aws:lambda:ap-northeast-1:209497400698:layer:console:33"
        ]
      },
      "DependsOn": [
        "ArtisanLogGroup"
      ]
    },
    "ArtisanLambdaVersionWxGUEAuYJ0hX3NMtscuyekbFKccI4lIcX6Fk2TBulU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArtisanLambdaFunction"
        },
        "CodeSha256": "QhIKQ2+zITHPYx/ZQY2iUGF++mUAwIlSJL6cNsN5m78="
      }
    },
    "WebLambdaVersionT3DjFQU3GgRRk9ryptqjRFmJIibDKiKhhDu0Ds": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WebLambdaFunction"
        },
        "CodeSha256": "QhIKQ2+zITHPYx/ZQY2iUGF++mUAwIlSJL6cNsN5m78="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-laravel",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "WebLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationWeb": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 28500
      }
    },
    "HttpApiRouteDefault": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationWeb"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationWeb"
    },
    "Assets": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "xkeiji-laravel-test"
      }
    },
    "AssetsBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "Assets"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "Assets",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Sample VPC"
          }
        ]
      }
    },
    "PrivateSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.0.0/25",
        "AvailabilityZone": "ap-northeast-1a",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Sample Private A"
          }
        ]
      }
    },
    "PrivateSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.0.128/25",
        "AvailabilityZone": "ap-northeast-1c",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Sample Private C"
          }
        ]
      }
    },
    "LambdaSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for Lambda Functions",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LambdaSecurityGroup"
          }
        ]
      }
    },
    "AuroraSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SecurityGroup for Aurora",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 3306,
            "ToPort": 3306,
            "CidrIp": "10.0.0.0/24"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AuroraSecurityGroup"
          }
        ]
      },
      "DependsOn": [
        "VPC"
      ]
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "SampleDB subnet group",
        "DBSubnetGroupName": "sampledb-subnet-group",
        "SubnetIds": [
          {
            "Ref": "PrivateSubnetA"
          },
          {
            "Ref": "PrivateSubnetC"
          }
        ]
      }
    },
    "DBCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "DatabaseName": "hoge_app",
        "Engine": "aurora-mysql",
        "EngineMode": "serverless",
        "MasterUsername": "root",
        "MasterUserPassword": "password",
        "DBClusterParameterGroupName": {
          "Ref": "DBClusterParameterGroup"
        },
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Ref": "AuroraSecurityGroup"
          }
        ]
      },
      "DependsOn": [
        "DBSubnetGroup"
      ]
    },
    "DBClusterParameterGroup": {
      "Type": "AWS::RDS::DBClusterParameterGroup",
      "Properties": {
        "Description": "A parameter group for aurora",
        "Family": "aurora-mysql5.7",
        "Parameters": {
          "time_zone": "Asia/Tokyo",
          "character_set_client": "utf8",
          "character_set_connection": "utf8",
          "character_set_database": "utf8",
          "character_set_results": "utf8",
          "character_set_server": "utf8"
        }
      }
    },
    "AuroraSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Name": "Sample/aurora",
        "SecretString": "{\"username\":\"root\", \"password\":\"password\"}"
      }
    },
    "SecretTargetAttachment": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "AuroraSecret"
        },
        "TargetId": {
          "Ref": "DBCluster"
        },
        "TargetType": "AWS::RDS::DBCluster"
      },
      "DependsOn": [
        "DBCluster"
      ]
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ArtisanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArtisanLambdaVersionWxGUEAuYJ0hX3NMtscuyekbFKccI4lIcX6Fk2TBulU"
      }
    },
    "WebLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WebLambdaVersionT3DjFQU3GgRRk9ryptqjRFmJIibDKiKhhDu0Ds"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      }
    }
  }
}
